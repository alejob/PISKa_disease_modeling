simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=test.fun,delta.t=1/365), statenames="N",paramnames=c("r","K","sigma"))
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
simStates <- simulate(parus,nsim=10,params=c(r=0.2),states=TRUE)
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=test.fun,delta.t=1/365), statenames="N",paramnames=c("r"))
simStates <- simulate(parus,nsim=10,params=c(r=0.2, N.0=100),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=test.fun)
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=test.fun, statenames="N",paramnames=c("r","K","sigma"))
test.fun <- function(xstart,times,params,...){ a<-seq(1,280,1.0) #if not 1.0, the numbers are integer
dim(a) <- c(1,10,28) #set dimension to tensor of rank-3
#dimnames(a)=list(1,seq(1,10),seq(1,28)) #gives name to rows
rownames(a)=c("row_name") #gives name to rows
return (a)}
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=test.fun, statenames="N",paramnames=c("r","K","sigma"))
simStates <- simulate(parus,nsim=10,params=c(r=0.2, N.0=100),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
parus.dat <- read.csv(text="
                      year,P
                      0060,6
                      0061,258
                      0062,185
                      0063,170
                      0064,267
                      0065,239
                      0066,006
                      0067,132
                      0068,167
                      0069,186
                      0070,128
                      0071,7
                      0072,174
                      0073,177
                      0074,1037
                      0075,172
                      0076,100
                      0077,45
                      0078,166
                      0079,161
                      0080,009
                      0081,306
                      0082,13
                      0083,35
                      0084,24
                      0085,75
                      0086,21"
                      )
ggplot(data=parus.dat,mapping=aes(x=year,y=P))+ geom_line()+geom_point()+ expand_limits(y=0)+ theme_classic()
parus.dat <- read.csv(text="
                      year,P
                      0000,0
                      0001,258
                      0002,185
                      0001,170
                      0001,207
                      0001,239
                      0000,000
                      0001,132
                      0001,107
                      0001,180"
                      )
ggplot(data=parus.dat,mapping=aes(x=year,y=P))+ geom_line()+geom_point()+ expand_limits(y=0)+ theme_classic()
step.fun <- Csnippet("
  double dW = rnorm(0,sqrt(dt));
  N += r*N*(1-N/K)*dt+sigma*N*dW;
")
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=step.fun,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
parus.dat <- read.csv(text="
                      year,P
                      1960,0
                      1961,0
                      1962,0
                      1963,0
                      1964,0
                      1965,0
                      1966,0
                      1967,0
                      1968,0
                      1969,0
                      1970,0
                      1971,0
                      1972,0
                      1973,0
                      1974,0
                      1975,0
                      1976,0
                      1977,0
                      1978,0
                      1979,0
                      1980,0
                      1981,0
                      1982,0
                      1983,0
                      1984,0
                      1985,0
                      1986,0"
                      )
ggplot(data=parus.dat,mapping=aes(x=year,y=P))+ geom_line()+geom_point()+ expand_limits(y=0)+ theme_classic()
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
parus.dat <- read.csv(text="
                      year,P
                      1960,148
                      1961,258
                      1962,185
                      1963,170
                      1964,267
                      1965,239
                      1966,196
                      1967,132
                      1968,167
                      1969,186
                      1970,128
                      1971,227
                      1972,174
                      1973,177
                      1974,137
                      1975,172
                      1976,119
                      1977,226
                      1978,166
                      1979,161
                      1980,199
                      1981,306
                      1982,206
                      1983,350
                      1984,214
                      1985,175
                      1986,211"
                      )
ggplot(data=parus.dat,mapping=aes(x=year,y=P))+ geom_line()+geom_point()+ expand_limits(y=0)+ theme_classic()
parus.dat <- read.csv(text="
                      year,P
                      1960,0
                      1961,0
                      1962,0
                      1963,0
                      1964,0
                      1965,0
                      1966,0
                      1967,0
                      1968,0
                      1969,0
                      1970,0
                      1971,0
                      1972,0
                      1973,0
                      1974,0
                      1975,0
                      1976,0
                      1977,0
                      1978,0
                      1979,0
                      1980,0
                      1981,0
                      1982,0
                      1983,0
                      1984,0
                      1985,0
                      1986,0"
                      )
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=step.fun,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
rnorm(n, mean = 0, sd = 1)
rnorm(10, mean = 0, sd = 1)
rnorm(5, mean = 0, sd = 1)
rnorm(5, mean = 10, sd = 1)
rnorm(1, mean = 10, sd = 1)
rnorm(1, mean = 10, sd = 1)
test.fun <- function()
dW <- rnorm(1, mean = 10, sd = 1)
N += r*N*(1-N/K)*dt+sigma*N*dW
test.fun <- function(
dW <- rnorm(1, mean = 10, sd = 1)
test.fun <- function()
{dW <- rnorm(1, mean = 10, sd = 1)
N <- N + r*N*(1-N/K)*dt+sigma*N*dW}
test.fun
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=test.fun,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
test.fun <- function(xstart,times,params,...)
 {dW <- rnorm(1, mean = 10, sd = 1)
 N <- N + r*N*(1-N/K)*dt+sigma*N*dW}
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=test.fun,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
test.fun <- function(xstart,times,params,delta.t...)
 {dW <- rnorm(1, mean = 10, sd = 1)
 N <- N + r*N*(1-N/K)*dt+sigma*N*dW}
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=test.fun,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
test.fun <- function(x,t,params,delta.t...)
 {dW <- rnorm(1, mean = 10, sd = 1)
 N <- N + r*N*(1-N/K)*dt+sigma*N*dW}
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=test.fun,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
test.fun <- function(x,t,params,delta.t,...)
 {dW <- rnorm(1, mean = 10, sd = 1)
 N <- N + r*N*(1-N/K)*dt+sigma*N*dW}
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=test.fun,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
a=c(1,3,4)
a
dat <- rnorm(100)
dat
q <- quantile(dat)
q
str(q)
a=c(1,2,3)
a
names(a)
test.fun <- function(c(1,2,3),10,c(5,10,15),0.3,...)
 {dW <- rnorm(1, mean = 10, sd = 1)
 N <- N + r*N*(1-N/K)*dt+sigma*N*dW}
test.fun <- function(c(1,2,3),10,c(5,10,15),0.3,...)
a<-seq(1,280,1.0)
dim(a) <- c(1,10,28)
rownames(a)=c("row_name")
a
a
test.fun <- function(a,10,c(5,10,15),0.3,...)
test.fun <- function(a,c(1,2,3),c(5,10,15),0.3,...)
time
t <-c(1,2,3)
test.fun <- function(a,t,c(5,10,15),0.3,...)
param<-c(5,10,15) 
test.fun <- function(a,t,param,0.3,...)
test.fun <- function(a,t,param,delta.t,...)
test.fun <- function(xstart,times,params,delta.t,...)
 {dW <- rnorm(1, mean = 10, sd = 1)
 N <- N + r*N*(1-N/K)*dt+sigma*N*dW}
hola<-function(x){return x+2*x}
hola(2)
test.fun <- function(xstart,times,params,delta.t,...)
 {dW <- rnorm(1, mean = 10, sd = 1)
 N <- N + r*N*(1-N/K)*dt+sigma*N*dW}
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=test.fun,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
test.fun <- function(x,t,params,delta.t,...)
 {dW <- rnorm(1, mean = 10, sd = 1)
 N <- N + r*N*(1-N/K)*dt+sigma*N*dW}
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=test.fun,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N=200),states=TRUE)
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=PISKa,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=system(PISKa),delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=system("PISKa"),delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
model <- list(f=expon)
library("seem")
install("seem")
install.package("seem")
package.install("seem")
install.packages("seem")
library("seem")
model <- list(f=expon)
model
t <- seq(0,10,1); dt <- 0.001
 p <- 0.1; X0 <- 1
X <- euler(X0, t, model$f, p, dt)
X
euler.sim()
euler.sim(step.fun=step.fun,delta.t=1/365),
              statenames="N",paramnames=c("r","K","sigma"))
euler.sim(step.fun=step.fun,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma")
euler.sim(step.fun=step.fun,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
euler.sim(step.fun=step.fun,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
step.fun
euler.sim(step.fun=step.fun,delta.t=1/305)
test.fun <- function(x,t,params,delta.t,...)
 {dW <- rnorm(1, mean = 10, sd = 1)
 N <- N + r*N*(1-N/K)*dt+sigma*N*dW}
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=step.fun,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=test.fun,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=test.fun,delta.t=1/305), statenames="Nanndi",paramnames=c("r","K","sigma"))
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
system("PISKa")
rnorm(0)
rnorm(0,sqrt(10))
rnorm(1,sqrt(10))
test.fun <- function(x,t,params,delta.t,...){
    dW <- rnorm(0, sqrt(t))
     N <- N + r*N*(1-N/K)*dt+sigma*N*dW
}
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=step.fun,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
parus <- pomp(data=parus.dat,time="year",t0=1959, rprocess=euler.sim(step.fun=test.fun,delta.t=1/305), statenames="N",paramnames=c("r","K","sigma"))
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
?".C"
?pomp
test.fun <- function (x, t, params, delta.t, ... ) {
  dW <- rnorm(n = 1, mean = 0, sd = sqrt(t))
  N <- x["N"] + params["r"] * x["N"] * (1 - x["N"]/params["K"]) * delta.t + params["sigma"] * dW
  c(N=unname(N))
}
parus <- pomp(data = parus.dat, time = "year", t0 = 1959, 
        rprocess = euler.sim(step.fun = test.fun, delta.t = 1/365))
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
parus.dat <- read.csv(text="
                      year,P
                      1960,148
                      1961,258
                      1962,185
                      1963,170
                      1964,267
                      1965,239
                      1966,196
                      1967,132
                      1968,167
                      1969,186
                      1970,128
                      1971,227
                      1972,174
                      1973,177
                      1974,137
                      1975,172
                      1976,119
                      1977,226
                      1978,166
                      1979,161
                      1980,199
                      1981,306
                      1982,206
                      1983,350
                      1984,214
                      1985,175
                      1986,211"
                      )
test.fun <- function (x, t, params, delta.t, ... ) {
test.fun <- function (x, t, params, delta.t, ... ) {
  dW <- rnorm(n = 1, mean = 0, sd = sqrt(t))
  N <- x["N"] + params["r"] * x["N"] * (1 - x["N"]/params["K"]) * delta.t + params["sigma"] * dW
  c(N=unname(N))
}
parus <- pomp(data = parus.dat, time = "year", t0 = 1959, 
        rprocess = euler.sim(step.fun = test.fun, delta.t = 1/365))
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
test.fun <- function (x, t, params, delta.t, ... ) {
  dW <- rnorm(n = 1, mean = 0, sd = sqrt(delta.t))
  N <- x["N"] + params["r"] * x["N"] * (1 - x["N"]/params["K"]) * delta.t + params["sigma"] * dW
  c(N=unname(N))
}
parus <- pomp(data = parus.dat, time = "year", t0 = 1959, 
        rprocess = euler.sim(step.fun = test.fun, delta.t = 1/365))
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
step.fun <- Csnippet("
      double dW = rnorm(0,sqrt(dt));
      N += r*N*(1-N/K)*dt+sigma*N*dW;
    ")
parus <- pomp(data=parus.dat,time="year",t0=1959, 
        rprocess=euler.sim(step.fun=test.fun,delta.t=1/305),
        statenames="N",paramnames=c("r","K","sigma"))
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
parus <- pomp(data=parus.dat,time="year",t0=1959,    
        rprocess=euler.sim(step.fun=test.fun,delta.t=1/305),
parus <- pomp(data=parus.dat,time="year",t0=1959,    
        rprocess=euler.sim(step.fun=step.fun,delta.t=1/305),
        statenames="N",paramnames=c("r","K","sigma"))
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
parus <- pomp(data=parus.dat,time="year",t0=1959, 
        rprocess=euler.sim(step.fun=test.fun,delta.t=1/305),
        statenames="N",paramnames=c("r","K","sigma"))
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
?".CC"
?".C++"
?".C"
?"pomp"
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
png()
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
png(CSnippet.png)
dev.print(png, 'Csnippet.png')
dev.print(png, 'Csnippet.png')
dev.off()
dev.print(png, 'Csnippet.png')
dev.print(png, 'Csnippet.png', width=100, height=100)
dev.off()
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
dev.print(png, 'Csnippet.png', width=10000, height=10000)
dev.off()
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
dev.print(png, 'Csnippet.png', width=1000, height=1000)
parus <- pomp(data=parus.dat,time="year",t0=1959, 
        rprocess=euler.sim(step.fun=step.fun,delta.t=1/305),
        statenames="N",paramnames=c("r","K","sigma"))
simStates <- simulate(parus,nsim=10,params=c(r=0.2,K=200,sigma=0.5,N.0=200),states=TRUE)
melt(simStates) %>% dcast(rep+time~variable) %>% ggplot(mapping=aes(x=time,y=N,group=rep,color=factor(rep)))+ geom_line()+guides(color=FALSE)+ theme_classic()
dev.print(png, 'Csnippet.png', width=1000, height=1000)
?"pomp"
library(snowfall)
library(parallel)
library(ggplot2);theme_set(theme_bw())
source("SEmInR_Gillespie_FCT.R")
source("RESuDe_FCT.R")
source("utils.R")
t1 <- as.numeric(Sys.time())
args <- commandArgs(trailingOnly = TRUE)
n.MC <- as.numeric(args[1])
# --- debug
# n.MC <- 3 ; warning(" * * * * * * n.MC overridden! ")
# - - - ---
pop.size <- 100000
I.init <- 2
horizon.years <- 1.5
### SEmInR parameters:
prmfxd.SEmInR <- list(horizon.years = horizon.years,
  pop.size      = pop.size,
  I.init        = I.init,
  n.MC          = n.MC,
  remove.fizzles = TRUE)
prm.SEmInR <- create.model.prm("syndata-prmset.csv",
   modelname = 'SEmInR')
### RESuDe parameters:
prmfxd.RESuDe <- list(pop.size = pop.size,
  I.init   = I.init,
  GIspan   = 20,
  horizon  = round(365*horizon.years,0),
  n.MC     = n.MC)
prm.RESuDe <- create.model.prm("syndata-prmset.csv",
   modelname = 'RESuDe')
# Run all data sets 
n.prmsets <- length(prm.SEmInR)+length(prm.RESuDe)
message(paste("\n ===> Simulating",
  n.prmsets*prmfxd.SEmInR[["n.MC"]],
  "synthetic data = ",
  n.prmsets,
  "parameter sets x",
  prmfxd.SEmInR[["n.MC"]],"MC ====\n")
)
sfInit(parallel = TRUE, cpu = detectCores())
sfLibrary(adaptivetau)
sfLibrary(plyr)
sfExportAll()
SIM.SEmInR <- sfSapply(prm.SEmInR, wrap.sim.SEmInR, prmfxd=prmfxd.SEmInR, simplify = FALSE)
SIM.RESuDe <- sfSapply(prm.RESuDe, wrap.sim.RESuDe, prmfxd=prmfxd.RESuDe, simplify = FALSE)
sfStop()
message("... simulations done.")
ref.SEmInR <- reformat.synthetic.for.db(SIM = SIM.SEmInR, 
prm = prm.SEmInR,
label = "SEmInR")
ref.RESuDe <- reformat.synthetic.for.db(SIM = SIM.RESuDe, 
prm = prm.RESuDe,
label = "RESuDe")
save.and.plot(ref.SEmInR, "SEmInR")
save.and.plot(ref.RESuDe, "RESuDe")
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
t2 <- as.numeric(Sys.time())
message(paste("\n\nCompleted in",round((t2-t1)/60,2),"minutes"))
library(snowfall)
library(parallel)
install.packages("snowfall")
library(snowfall)
library(ggplot2);theme_set(theme_bw())
install.packages("adaptativetau")
install.packages("adaptivetau")
Santiago<-read.table(paste(args[1],"/Santiago.out", sep=""), col.names=c("time", "cases", "susceptible", "exposed", "i\
nfected", "removed", "dead")) 
nfected", "removed", "dead")) 
Santiago<-read.table(paste(args[1],"/Santiago.out", sep=""), col.names=c("time", "cases", "susceptible", "exposed","infected", "removed", "dead"))
Santiago<-read.table(base.simdir/Santiago.out, sep=""), col.names=c("time", "cases", "susceptible", "exposed","infected", "removed", "dead"))
Santiago<-read.table(base.simdir/Santiago.out), col.names=c("time", "cases", "susceptible", "exposed","infected", "removed", "dead"))
Santiago<-read.table(base.simdir/Santiago.out, col.names=c("time", "cases", "susceptible", "exposed","infected", "removed", "dead"))
Santiago<-read.table("base.simdir/Santiago.out", col.names=c("time", "cases", "susceptible", "exposed","infected", "removed", "dead"))
Santiago
t<- Santiago$time[2:40]
modelSantiago <- function(t, x0, lambda, b){(x0^b+lambda*t*b)^(1/b)}
plot(Santiago$infected[2:40])
plot(Santiago$infected[2:40], t)
plot(t,Santiago$infected[2:40])
lines(modelSantiago(t,1,0.09,0.6))
lines(modelSantiago(t,1,0.09,0.8))
lines(modelSantiago(t,1,0.09,0.9))
lines(modelSantiago(t,1,0.5,0.9))
lines(modelSantiago(t,1,0.5,1.9))
lines(modelSantiago(t,1,0.8,1.9))
lines(modelSantiago(t,1,0.8,0.98))
lines(modelSantiago(t,1,0.8,0.98))
plot(t,Santiago$infected[2:40])
lines(modelSantiago(t,1,0.8,0.98))
lines(modelSantiago(t,1,0.6,0.98))
lines(modelSantiago(t,1,0.05,0.98))
t
ines(modelSantiago(t,1,0.05,0.98)
modelSantiago(t,1,0.05,0.98)
lines(modelSantiago(t,1,0.05,0.98),t)
lines(modelSantiago(t,1,0.05,0.98),t)
lines(y, modelSantiago(t,1,0.05,0.98))
plot(modelSantiago(t,1,0.05,0.98),t)
plot(t,modelSantiago(t,1,0.05,0.98))
plot(t,Santiago$infected[2:40])
lines(t,modelSantiago(t,1,0.05,0.98))
lines(t,modelSantiago(t,1,0.05,0.8))
lines(t,modelSantiago(t,1,0.05,0.6))
lines(t,modelSantiago(t,1,0.05,0.55))
lines(t,modelSantiago(t,1,0.09,0.55))
lines(t,modelSantiago(t,1,0.09,0.6))
lines(t,modelSantiago(t,1,0.09,0.58))
lambdas_vector
lambda_noinfo=lambdas_vector
